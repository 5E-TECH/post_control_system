name: CI/CD Deploy (Selective Build + Permissions Fix)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      # 1️⃣ Checkout latest code
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # 3️⃣ Determine changed directories
      - name: Determine changed directories
        id: changes
        run: |
          git fetch origin main --depth=2
          echo "Changed directories:"
          CHANGED_DIRS=$(git diff --name-only HEAD~1 HEAD | cut -d'/' -f1 | sort -u | grep -E 'client|server' || true)
          echo "$CHANGED_DIRS"

          if echo "$CHANGED_DIRS" | grep -q "client"; then
            echo "client_changed=true" >> $GITHUB_OUTPUT
          else
            echo "client_changed=false" >> $GITHUB_OUTPUT
          fi

          if echo "$CHANGED_DIRS" | grep -q "server"; then
            echo "server_changed=true" >> $GITHUB_OUTPUT
          else
            echo "server_changed=false" >> $GITHUB_OUTPUT
          fi

      # 4️⃣ Build client if changed
      - name: Build client
        if: steps.changes.outputs.client_changed == 'true'
        working-directory: ./client
        run: |
          echo "📦 Installing dependencies for client..."
          npm ci
          echo "⚙️ Building client..."
          npm run build

      # 5️⃣ Build server if changed
      - name: Build server
        if: steps.changes.outputs.server_changed == 'true'
        working-directory: ./server
        run: |
          echo "📦 Installing dependencies for server..."
          npm ci
          echo "⚙️ Building server..."
          npm run build || echo "No build step found for server."

      # 6️⃣ Deploy to remote server via SSH
      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script_stop: true
          script: |
            echo "🚀 Starting deployment on remote server..."

            cd /var/www/post_control_system || exit 1

            echo "📦 Pulling latest code..."
            git fetch origin main
            git reset --hard origin/main

            # Ensure permissions
            echo "🧾 Fixing permissions..."
            sudo mkdir -p /var/www/html
            sudo chown -R $USER:$USER /var/www/html

            # Deploy frontend if changed
            if [ "${{ steps.changes.outputs.client_changed }}" = "true" ]; then
              echo "⚙️ Building frontend..."
              cd client
              npm ci
              npm run build
              echo "📤 Deploying frontend..."
              sudo rm -rf /var/www/html/*
              sudo cp -r dist/* /var/www/html/
              echo "✅ Frontend deployed."
              cd ..
            else
              echo "🟡 No frontend changes detected."
            fi

            # Deploy backend if changed
            if [ "${{ steps.changes.outputs.server_changed }}" = "true" ]; then
              echo "⚙️ Restarting server..."
              cd server
              npm ci
              npm run build || echo "No build step found."
              pm2 reload all || pm2 restart all
              echo "✅ Backend deployed."
            else
              echo "🟡 No backend changes detected."
            fi

            echo "✅ Deployment completed successfully."
