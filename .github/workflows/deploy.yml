name: CI/CD Deploy (Full Build + Systemd + Cache)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3️⃣ Generate GitHub App token (for private repo)
      - name: Setup GitHub App token
        uses: tibdex/github-app-token@v1
        id: generate_token
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          repository: 5E-TECH/post_control_system

      # 4️⃣ Cache client dependencies
      - name: Cache client node_modules
        uses: actions/cache@v3
        with:
          path: client/node_modules
          key: client-${{ hashFiles('client/package-lock.json') }}
          restore-keys: client-

      # 5️⃣ Cache server dependencies
      - name: Cache server node_modules
        uses: actions/cache@v3
        with:
          path: server/node_modules
          key: server-${{ hashFiles('server/package-lock.json') }}
          restore-keys: server-

      # 6️⃣ Deploy to server
      - name: Deploy to Production Server
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > server_key.pem
          chmod 600 server_key.pem

          ssh -i server_key.pem -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            
            cd ${{ secrets.APP_PATH }}

            echo '📦 Pulling latest code...'
            git reset --hard
            git pull https://x-access-token:${{ steps.generate_token.outputs.token }}@github.com/5E-TECH/post_control_system.git main

            # ===== Install & Build Frontend =====
            echo '📁 Building frontend...'
            cd client
            npm ci --prefer-offline --legacy-peer-deps
            NODE_OPTIONS='--max-old-space-size=1024' npm run build
            sudo cp -r dist/* /var/www/html/
            cd ..
            echo '⚡ Frontend deployed.'

            # ===== Install & Build Backend =====
            echo '🧠 Building backend...'
            cd server
            npm ci --prefer-offline --legacy-peer-deps
            NODE_OPTIONS='--max-old-space-size=1024' npm run build
            cd ..
            
            echo '🔁 Restarting backend systemd service...'
            sudo systemctl restart nestapp.service
            sudo systemctl status nestapp --no-pager

            echo '✅ Deployment completed successfully.'
          "
